{"version":3,"sources":["lib/prismic.ts","components/Post/styles.tsx","components/Post/index.tsx","pages/Post/index.tsx"],"names":["apiEndpoint","client","req","options","Prismic","PostContainer","styled","div","PostWrapper","Post","children","direction","duration","useState","post","setPost","slug","useParams","history","useHistory","useEffect","a","getByUID","String","response","push","fetchData","PrismicDOM","RichText","asText","data","title","src","thumbnail","url","width","alt","dangerouslySetInnerHTML","__html","asHtml","content","href","anexo","target","style","color","height","Button"],"mappings":"4GAAA,+CAEaA,EAAc,yCAEdC,EAAS,WAAiB,IAAhBC,EAAe,uDAAT,KACrBC,EAAUD,EAAM,CAAEA,OAAQ,KAChC,OAAOE,IAAQH,OAAOD,EAAaG,K,gJCJxBE,EAAgBC,IAAOC,IAAV,qgBA4BbC,EAAcF,IAAOC,IAAV,kG,OCjBTE,EAVF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OACE,cAAC,IAAD,CAAOC,UAAU,KAAKC,SAAU,KAAhC,SACE,cAACJ,EAAD,UACE,cAACH,EAAD,UAAgBK,S,QCkDTD,UA7CF,WACX,MAAwBI,mBAAmB,MAA3C,mBAAOC,EAAP,KAAaC,EAAb,KACQC,EAASC,cAATD,KACFE,EAAUC,cAchB,OAZAC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,sEACOpB,cAASqB,SAAS,aAAcC,OAAOP,GAAO,IADrD,QACVQ,EADU,QAGdT,EAAQS,GAERN,EAAQO,KAAK,UALC,2CAAH,qDAQfC,KACC,CAACV,EAAME,IAGR,cAAC,EAAD,UACGJ,GACC,qCACE,6BAAKa,IAAWC,SAASC,OAAOf,EAAKgB,KAAKC,SAC1C,qBACEC,IAAKlB,EAAKgB,KAAKG,UAAUC,IACzBC,MAAM,MACNC,IAAI,sBAEN,qBACEC,wBAAyB,CACvBC,OAAQX,IAAWC,SAASW,OAAOzB,EAAKgB,KAAKU,YAGjD,mBACEC,KAAM3B,EAAKgB,KAAKY,MAAMR,IACtBS,OAAO,YACPC,MAAO,CAAEC,MAAO,QAASV,MAAO,OAAQW,OAAQ,QAHlD,SAKE,cAACC,EAAA,EAAD","file":"static/js/4.03f115f4.chunk.js","sourcesContent":["import Prismic from '@prismicio/client';\n\nexport const apiEndpoint = 'https://e-leonor.cdn.prismic.io/api/v2';\n\nexport const client = (req = null) => {\n  const options = req ? { req } : null;\n  return Prismic.client(apiEndpoint, options);\n};\n","import styled from 'styled-components';\n\nexport const PostContainer = styled.div`\n  position: relative;\n  padding: 1.5rem 0 3rem;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (max-width: 1024px) {\n    padding: 5.5rem 0 3rem;\n  }\n\n  img {\n    max-width: 300px;\n    max-height: 300px;\n    border-radius: 12px;\n    margin-bottom: 24px;\n  }\n\n  max-width: 720px;\n\n  @media only screen and (max-width: 768px) {\n    padding: 4rem 0 3rem;\n    max-width: 80%;\n  }\n`;\n\nexport const PostWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import { Slide } from 'react-awesome-reveal';\nimport { PostContainer, PostWrapper } from './styles';\n\nconst Post = ({ children }) => {\n  return (\n    <Slide direction=\"up\" duration={1500}>\n      <PostWrapper>\n        <PostContainer>{children}</PostContainer>\n      </PostWrapper>\n    </Slide>\n  );\n};\n\nexport default Post;\n","import { useEffect, useState } from 'react';\nimport { Document } from '@prismicio/client/types/documents';\nimport PrismicDOM from 'prismic-dom';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { client } from '../../lib/prismic';\nimport PostContainer from '../../components/Post';\nimport { Button } from '../../common/Button';\n\ninterface IParams {\n  slug: string;\n}\n\nconst Post = () => {\n  const [post, setPost] = useState<Document>(null);\n  const { slug } = useParams<IParams>();\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await client().getByUID('mural_post', String(slug), {});\n      if (response) {\n        setPost(response);\n      } else {\n        history.push('/mural');\n      }\n    };\n    fetchData();\n  }, [slug, history]);\n\n  return (\n    <PostContainer>\n      {post && (\n        <>\n          <h1>{PrismicDOM.RichText.asText(post.data.title)}</h1>\n          <img\n            src={post.data.thumbnail.url}\n            width=\"600\"\n            alt=\"camiseta_frontend\"\n          />\n          <div\n            dangerouslySetInnerHTML={{\n              __html: PrismicDOM.RichText.asHtml(post.data.content),\n            }}\n          />\n          <a\n            href={post.data.anexo.url}\n            target=\"_newblank\"\n            style={{ color: 'white', width: '100%', height: '100%' }}\n          >\n            <Button>Ir ao anexo</Button>\n          </a>\n        </>\n      )}\n    </PostContainer>\n  );\n};\n\nexport default Post;\n"],"sourceRoot":""}